import * as React from "react";
import type { IconProps } from "./types";

/**
 * SettingUtlinedIcon icon component.
 *
 * @description Supports sizes: small (12px), medium (16px, default), large (20px).
 * Automatically falls back to the closest available size if exact one is missing.
 *
 * @param fontSize - Icon size preset or custom pixel value
 * @param color - Icon color (supports CSS colors, variables, and 'currentColor')
 * @param ...props - All other SVG element props
 */

const svgChildren = {
  small: {
    content: {
      __html: `<g clipPath="url(#a)"><path fill="currentColor" d="M9.284 6.002c0-.466.253-.872.622-1.104.148-.093.19-.135.208-.159a.5.5 0 0 0 .099-.369.6.6 0 0 0-.064-.17 9 9 0 0 0-.249-.448 9 9 0 0 0-.263-.44.6.6 0 0 0-.116-.14.5.5 0 0 0-.369-.099c-.029.004-.086.02-.241.1a1.31 1.31 0 0 1-1.268-.013A1.31 1.31 0 0 1 7 2.07a.8.8 0 0 0-.034-.26.5.5 0 0 0-.27-.27.6.6 0 0 0-.179-.03 8 8 0 0 0-.513-.008c-.24 0-.394 0-.513.009a.6.6 0 0 0-.179.029.5.5 0 0 0-.27.27c-.011.028-.027.085-.033.26a1.31 1.31 0 0 1-.646 1.09 1.31 1.31 0 0 1-1.266.014c-.155-.082-.212-.097-.242-.1a.5.5 0 0 0-.37.098.6.6 0 0 0-.114.14 9 9 0 0 0-.264.44c-.12.208-.197.342-.25.448a.6.6 0 0 0-.063.17.5.5 0 0 0 .1.37c.017.023.058.065.206.158.37.232.623.638.623 1.104s-.254.872-.623 1.103c-.148.093-.189.136-.207.16a.5.5 0 0 0-.1.369.6.6 0 0 0 .064.17c.053.106.13.24.25.448s.198.342.264.44a.6.6 0 0 0 .114.14.5.5 0 0 0 .37.099c.03-.004.087-.02.242-.1.385-.204.863-.22 1.266.013.404.233.63.655.646 1.09.006.175.022.232.033.26a.5.5 0 0 0 .27.27.7.7 0 0 0 .18.03c.118.007.272.008.512.008s.395 0 .513-.009a.6.6 0 0 0 .178-.03.5.5 0 0 0 .27-.27c.012-.027.028-.084.035-.258.016-.436.241-.858.644-1.091a1.31 1.31 0 0 1 1.268-.014c.155.082.212.097.241.1a.5.5 0 0 0 .37-.098.6.6 0 0 0 .115-.14c.066-.098.143-.232.263-.44.12-.207.197-.342.25-.448a.6.6 0 0 0 .063-.17.5.5 0 0 0-.099-.37c-.018-.023-.06-.065-.208-.159a1.31 1.31 0 0 1-.622-1.103M7 6a1 1 0 1 0-2 0 1 1 0 0 0 2 0m3.284.002c0 .092.05.192.154.257.174.109.34.228.47.397a1.5 1.5 0 0 1 .296 1.109c-.023.174-.084.33-.156.478-.071.145-.168.313-.281.509s-.21.365-.3.498a1.5 1.5 0 0 1-.337.375 1.5 1.5 0 0 1-1.109.297 1.7 1.7 0 0 1-.578-.207.31.31 0 0 0-.3-.006.31.31 0 0 0-.145.263 1.7 1.7 0 0 1-.11.604 1.5 1.5 0 0 1-.811.812 1.5 1.5 0 0 1-.493.103c-.16.011-.355.011-.581.011s-.42 0-.581-.01a1.5 1.5 0 0 1-.493-.104 1.5 1.5 0 0 1-.812-.812 1.7 1.7 0 0 1-.11-.604.31.31 0 0 0-.145-.262.31.31 0 0 0-.3.005c-.18.095-.367.18-.578.207a1.5 1.5 0 0 1-1.108-.297 1.5 1.5 0 0 1-.336-.375c-.09-.133-.187-.302-.3-.498s-.21-.364-.281-.509a1.5 1.5 0 0 1-.157-.478 1.5 1.5 0 0 1 .297-1.109c.129-.168.295-.288.468-.397a.31.31 0 0 0 .155-.257.31.31 0 0 0-.155-.257 1.7 1.7 0 0 1-.468-.397 1.5 1.5 0 0 1-.297-1.109c.023-.175.084-.33.157-.478.07-.145.168-.313.281-.51.113-.195.21-.364.3-.497.092-.137.196-.268.336-.375a1.5 1.5 0 0 1 1.11-.297c.21.028.396.112.576.207a.31.31 0 0 0 .3.005.31.31 0 0 0 .146-.262c.007-.204.028-.408.11-.604a1.5 1.5 0 0 1 .81-.812c.164-.067.329-.092.494-.103.16-.011.355-.011.58-.011.227 0 .422 0 .582.01.165.012.33.037.493.104a1.5 1.5 0 0 1 .812.812c.081.196.101.4.109.604a.31.31 0 0 0 .145.262.31.31 0 0 0 .3-.005c.181-.096.367-.18.578-.207a1.5 1.5 0 0 1 1.11.297c.14.107.243.238.336.375.09.133.186.302.3.498s.21.364.28.509c.073.148.134.303.157.478a1.5 1.5 0 0 1-.297 1.109c-.13.168-.295.288-.469.397a.31.31 0 0 0-.154.257M8 6a2 2 0 1 1-4 0 2 2 0 0 1 4 0"/></g><defs><clipPath id="a"><rect width="12" height="12" fill="currentColor" rx="5"/></clipPath></defs>`,
    },
    viewBox: "0 0 12 12",
  },

  medium: {
    content: {
      __html: `<path fill="currentColor" d="M12.546 8.003c0-.559.304-1.05.752-1.331.2-.126.277-.196.32-.251a.83.83 0 0 0 .164-.616.9.9 0 0 0-.1-.278c-.072-.148-.178-.333-.337-.608s-.265-.46-.358-.597a.9.9 0 0 0-.19-.224.83.83 0 0 0-.616-.165c-.07.009-.168.04-.378.151a1.58 1.58 0 0 1-1.528-.015 1.58 1.58 0 0 1-.777-1.316c-.009-.238-.03-.338-.058-.402a.83.83 0 0 0-.45-.452 1 1 0 0 0-.29-.051 11 11 0 0 0-.696-.012c-.317 0-.53 0-.695.012a1 1 0 0 0-.29.051.83.83 0 0 0-.452.452c-.026.064-.048.164-.057.402a1.58 1.58 0 0 1-.777 1.316 1.58 1.58 0 0 1-1.528.015c-.21-.111-.309-.142-.378-.151a.83.83 0 0 0-.615.165.9.9 0 0 0-.19.224c-.093.137-.2.322-.358.597-.159.275-.265.46-.338.608a1 1 0 0 0-.1.278c-.03.219.03.44.165.616.042.055.118.124.32.25.448.282.752.773.752 1.332s-.304 1.049-.752 1.33c-.202.127-.278.197-.32.252a.84.84 0 0 0-.165.616c.007.055.03.133.1.276.073.149.18.334.338.609s.265.46.358.597a1 1 0 0 0 .19.225.83.83 0 0 0 .615.165c.07-.009.168-.04.378-.152a1.58 1.58 0 0 1 1.528.014c.485.28.757.789.777 1.317.009.238.03.339.057.403a.83.83 0 0 0 .452.45.9.9 0 0 0 .29.053c.165.011.378.01.695.01s.531.002.696-.01a.9.9 0 0 0 .29-.053.83.83 0 0 0 .45-.45c.027-.064.05-.165.058-.403.02-.528.293-1.037.777-1.317a1.58 1.58 0 0 1 1.528-.014c.21.111.309.143.378.152.219.03.44-.031.616-.166a.9.9 0 0 0 .19-.224c.093-.138.2-.322.358-.597.159-.275.265-.46.338-.609a1 1 0 0 0 .1-.277.83.83 0 0 0-.166-.615c-.042-.055-.118-.125-.32-.252a1.58 1.58 0 0 1-.751-1.33M9.5 8a1.5 1.5 0 1 0-3 0 1.5 1.5 0 0 0 3 0m4.046.003c0 .185.1.369.283.483.227.143.428.289.582.49.296.385.427.873.364 1.355a1.9 1.9 0 0 1-.195.587 12 12 0 0 1-.369.668c-.152.263-.278.482-.394.654a1.9 1.9 0 0 1-.412.461 1.83 1.83 0 0 1-1.354.364c-.251-.034-.478-.134-.715-.26a.58.58 0 0 0-.56-.003.58.58 0 0 0-.278.487c-.01.268-.037.514-.134.748a1.83 1.83 0 0 1-.992.992c-.193.08-.393.112-.604.126-.207.014-.46.014-.764.014s-.557 0-.764-.014a1.9 1.9 0 0 1-.604-.126 1.83 1.83 0 0 1-.992-.992c-.097-.234-.123-.48-.133-.748a.58.58 0 0 0-.278-.487.58.58 0 0 0-.56.004c-.237.125-.464.225-.715.259a1.83 1.83 0 0 1-1.355-.364 1.9 1.9 0 0 1-.412-.46c-.115-.173-.241-.392-.393-.655s-.279-.482-.37-.668a1.9 1.9 0 0 1-.194-.587c-.063-.482.068-.97.364-1.355.154-.201.354-.347.58-.49a.58.58 0 0 0 .285-.483.58.58 0 0 0-.284-.484c-.227-.143-.427-.289-.581-.49a1.83 1.83 0 0 1-.364-1.355c.028-.208.1-.396.194-.586.091-.186.218-.406.37-.67.152-.262.278-.481.393-.653.119-.176.245-.334.412-.461a1.83 1.83 0 0 1 1.355-.364c.251.033.478.135.715.26.19.1.4.096.56.003a.58.58 0 0 0 .278-.487c.01-.268.036-.514.133-.748a1.83 1.83 0 0 1 .992-.992c.193-.08.393-.112.604-.126.207-.015.46-.014.764-.014s.557 0 .764.014c.21.014.41.045.604.126.45.186.806.543.992.992.097.234.124.48.134.748a.58.58 0 0 0 .277.487c.16.093.37.098.561-.003.237-.125.464-.226.715-.259.482-.063.969.067 1.354.363.167.127.294.285.412.46.116.173.242.392.394.655s.278.483.37.669c.092.19.166.378.194.586.063.482-.068.97-.364 1.355-.154.201-.355.347-.582.49a.58.58 0 0 0-.283.484M10.5 8a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0"/>`,
    },
    viewBox: "0 0 16 16",
  },

  large: {
    content: {
      __html: `<path fill="currentColor" d="M15.807 10.003c0-.652.355-1.226.882-1.557.255-.16.365-.257.432-.344.188-.246.272-.556.232-.863a1.3 1.3 0 0 0-.137-.385c-.093-.19-.23-.425-.427-.767s-.333-.577-.451-.753a1.3 1.3 0 0 0-.266-.312 1.17 1.17 0 0 0-.862-.23c-.11.014-.248.061-.515.202a1.85 1.85 0 0 1-1.789-.015 1.85 1.85 0 0 1-.908-1.542c-.011-.302-.04-.446-.082-.547a1.17 1.17 0 0 0-.63-.631 1.3 1.3 0 0 0-.403-.074 14 14 0 0 0-.878-.015c-.395 0-.667 0-.878.015-.207.014-.32.04-.401.074a1.17 1.17 0 0 0-.632.63c-.042.102-.07.246-.081.548a1.85 1.85 0 0 1-.909 1.542 1.85 1.85 0 0 1-1.789.015c-.266-.14-.405-.189-.514-.203a1.17 1.17 0 0 0-.863.231c-.07.055-.15.14-.265.312-.118.176-.254.411-.451.753-.198.342-.334.577-.427.768a1.3 1.3 0 0 0-.137.384c-.04.307.043.617.232.863.067.087.177.183.432.343.527.331.881.906.881 1.558s-.354 1.227-.88 1.558c-.256.16-.366.256-.433.343a1.17 1.17 0 0 0-.232.864c.012.088.046.198.137.384.093.19.23.426.427.768l.255.438q.108.184.196.315c.116.172.195.256.265.31.246.189.556.272.863.232.109-.014.248-.062.514-.203.55-.29 1.225-.31 1.79.015.564.326.884.921.908 1.542.01.301.039.446.08.547.12.286.347.514.633.632.082.034.194.06.4.074.212.015.484.015.879.015s.666 0 .878-.015c.207-.014.32-.04.402-.074.286-.118.513-.346.631-.632.042-.101.07-.245.082-.547a1.85 1.85 0 0 1 .908-1.542 1.85 1.85 0 0 1 1.79-.015c.266.14.405.188.514.203.307.04.617-.043.862-.232.07-.054.15-.138.265-.31.118-.176.255-.41.452-.753.197-.342.333-.577.426-.768.091-.186.126-.296.137-.384a1.17 1.17 0 0 0-.23-.864c-.068-.087-.178-.183-.433-.343a1.85 1.85 0 0 1-.882-1.558M12 10a2 2 0 1 0-4 0 2 2 0 0 0 4 0m4.807.003a.85.85 0 0 0 .414.71c.28.177.514.35.693.583.35.456.505 1.032.43 1.602a2.2 2.2 0 0 1-.23.694c-.113.228-.268.498-.459.828-.19.33-.346.6-.488.81a2.2 2.2 0 0 1-.486.547 2.17 2.17 0 0 1-1.602.43c-.29-.04-.558-.156-.85-.31a.85.85 0 0 0-.823-.003.85.85 0 0 0-.409.712c-.012.331-.044.622-.156.893-.22.53-.642.953-1.173 1.173-.224.093-.459.13-.717.147-.253.018-.565.018-.946.018s-.692 0-.945-.018a2.2 2.2 0 0 1-.717-.147 2.17 2.17 0 0 1-1.173-1.173c-.112-.27-.144-.56-.156-.892a.85.85 0 0 0-.41-.713.85.85 0 0 0-.822.002c-.293.155-.56.272-.85.31a2.17 2.17 0 0 1-1.603-.429 2.2 2.2 0 0 1-.486-.546 8 8 0 0 1-.226-.36l-.262-.451c-.19-.33-.346-.6-.458-.828a2.2 2.2 0 0 1-.23-.694 2.17 2.17 0 0 1 .429-1.602c.178-.233.414-.406.694-.582a.85.85 0 0 0 .413-.711.85.85 0 0 0-.413-.711c-.28-.176-.515-.349-.693-.581a2.17 2.17 0 0 1-.43-1.603c.032-.24.117-.462.23-.694.112-.228.268-.497.458-.827.191-.33.346-.6.488-.812a2.2 2.2 0 0 1 .486-.546 2.17 2.17 0 0 1 1.603-.43c.29.04.557.157.85.311a.85.85 0 0 0 .822.002.85.85 0 0 0 .41-.713c.012-.33.044-.62.156-.891.22-.531.642-.953 1.173-1.173.224-.093.459-.13.717-.148.253-.018.564-.017.945-.017s.693 0 .946.017c.258.017.493.055.717.148.53.22.953.642 1.173 1.173.112.27.144.56.156.891a.85.85 0 0 0 .41.713c.24.14.549.143.822-.002.292-.154.56-.272.85-.31.57-.075 1.146.08 1.602.43.192.147.342.331.486.545.142.211.297.482.488.812.19.33.347.6.458.827.114.232.199.454.23.694.076.57-.08 1.147-.429 1.603-.179.233-.413.406-.693.582a.85.85 0 0 0-.414.71M13 10a3 3 0 1 1-6 0 3 3 0 0 1 6 0"/>`,
    },
    viewBox: "0 0 20 20",
  },
};

const sizeToPixel = {
  small: 12,
  medium: 16,
  large: 20,
};

type SizeKey = keyof typeof svgChildren;

function pickClosestSvg(fontSize: "small" | "medium" | "large" | number) {
  const available = Object.entries(svgChildren).filter(
    ([, data]) => data && data.content.__html,
  ) as [SizeKey, (typeof svgChildren)[SizeKey]][];

  if (available.length === 0) {
    return { content: { __html: "" }, viewBox: "0 0 16 16" };
  }

  if (typeof fontSize === "string") {
    const found = available.find(([key]) => key === fontSize);
    if (found) return found[1];
  }

  if (typeof fontSize === "number") {
    return available.reduce((best, curr) => {
      const [bestKey] = best;
      const [currKey] = curr;
      const bestDiff = Math.abs(
        sizeToPixel[bestKey as keyof typeof sizeToPixel] - fontSize,
      );
      const currDiff = Math.abs(
        sizeToPixel[currKey as keyof typeof sizeToPixel] - fontSize,
      );
      return currDiff < bestDiff ? curr : best;
    })[1];
  }

  // Fallback to medium, then first available
  const medium = available.find(([key]) => key === "medium");
  return medium ? medium[1] : available[0][1];
}

const SettingUtlinedIcon = React.forwardRef<SVGSVGElement, IconProps>(
  (props, ref) => {
    const {
      fontSize = "medium",
      color = "currentColor",
      style,
      ...other
    } = props;

    const selected = pickClosestSvg(fontSize);
    const viewBox = selected.viewBox;

    const sizeValue =
      typeof fontSize === "number"
        ? fontSize
        : sizeToPixel[fontSize as keyof typeof sizeToPixel] || 16;

    const finalStyle = {
      ...style,
      color,
    } as React.CSSProperties;

    return (
      <svg
        ref={ref}
        width={sizeValue}
        height={sizeValue}
        viewBox={viewBox}
        fill="none"
        style={finalStyle}
        xmlns="http://www.w3.org/2000/svg"
        {...other}
      >
        {selected.content.__html && (
          <g dangerouslySetInnerHTML={selected.content} />
        )}
      </svg>
    );
  },
);

SettingUtlinedIcon.displayName = "SettingUtlinedIcon";

export default SettingUtlinedIcon;
