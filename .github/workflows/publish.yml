name: Publish to npm

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "NPM dist-tag (latest / next / rc / ...)"
        required: true
        default: "latest"
      custom_tag:
        description: "Custom git tag to publish (optional)"
        required: false
        default: ""
      dry-run:
        description: "Run in dry-run mode without actually publishing packages"
        required: false
        type: boolean
        default: false

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm ci

      - name: Build (for publication)
        run: npm run build:prod

      - name: Clean package.json
        run: npm run clean-package

      - name: Verify version matches git tag
        id: verify
        run: |
          PKG_VERSION=$(node -p "require('./package.json').version")
          if [ -n "${{ inputs.custom_tag }}" ]; then
            GIT_TAG="${{ inputs.custom_tag }}"
            echo "🎯 Using custom tag: $GIT_TAG"
          else
            # get last tag
            GIT_TAG=$(git tag --list "v*" --sort=-version:refname | head -n1)
            echo "ℹ️  Using git tag: $GIT_TAG"
          fi

          echo "📦 package.json version: $PKG_VERSION"
          echo "🏷 git tag: $GIT_TAG"

          TAG_VERSION=${GIT_TAG#v}
          if [ "$PKG_VERSION" != "$TAG_VERSION" ]; then
            echo "❌ Version mismatch: package.json=$PKG_VERSION vs git tag=$GIT_TAG"
            exit 1
          fi

      - name: Debug tags
        if: ${{ always() }}
        run: |
          echo "🔍 All tags:"
          git tag --list "v*" --sort=-version:refname
          echo "🔍 Stable tags:"
          git tag --list "v[0-9]*.[0-9]*.[0-9]*" --sort=-version:refname | grep -v -E "alpha|beta|rc"

      - name: Dry-run mode simulation
        if: ${{ inputs.dry-run == 'true' }}
        run: |
          echo "🧪 DRY-RUN MODE: Simulation only"
          echo "📦 Would publish: ${{ inputs.custom_tag || 'auto-detected-tag' }}"
          echo "🏷  With npm tag: ${{ inputs.tag }}"
          echo "🔐 NPM_TOKEN present: ${{ secrets.NPM_TOKEN != '' }}"
          echo "✅ All checks passed - ready for real publish"

      - name: Publish package
        if: ${{ inputs.dry-run != 'true' }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public --tag ${{ inputs.tag }}